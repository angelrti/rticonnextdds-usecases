<?xml version="1.0"?>
<!--
 (c) 2005-2014 Copyright, Real-Time Innovations, Inc.  All rights reserved.
 RTI grants Licensee a license to use, modify, compile, and create derivative
 works of the Software.  Licensee has the right to distribute object form only
 for use with RTI products.  The Software is provided "as is", with no warranty
 of any type, including any warranty for fitness for any purpose. RTI is under
 no obligation to maintain or support the Software.  RTI shall not be liable for
 any incidental or consequential damages arising out of the use or inability to
 use the software.
 -->
<dds xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:noNamespaceSchemaLocation="http://community.rti.com/schema/5.1.0/rti_routing_service.xsd"
   version="5.1.0">

    <qos_library name="RoutingLibrary">
        <datareader_qos name="StateDataReader" base_name="BuiltinQosLibExp::Generic.KeepLastReliable.TransientLocal">

            <!-- The Alarm topic is:  -->
            <!--   1) Reliable        -->
            <!--   2) Durable         -->
            <!--   3) History of 1    -->
            <history>
                <kind>KEEP_LAST_HISTORY_QOS</kind>
                <depth>1</depth>
            </history>

        </datareader_qos>
        <datawriter_qos name="StateDataWriter" base_name="BuiltinQosLibExp::Generic.KeepLastReliable.TransientLocal">
            <!-- The Alarm topic is:  -->
            <!--   1) Reliable        -->
            <!--   2) Durable         -->
            <!--   3) History of 1    -->
            <history>
                <kind>KEEP_LAST_HISTORY_QOS</kind>
                <depth>1</depth>
            </history>
        </datawriter_qos>

        <!-- The Temperature topic is:  -->
        <!-- 1) Best effort             -->
        <datareader_qos name="SensorDataReader">
            <reliability>
                <kind>BEST_EFFORT_RELIABILITY_QOS</kind>
            </reliability>
        </datareader_qos>

        <!-- The Temperature topic is:  -->
        <!-- 1) Best effort             -->
        <datawriter_qos name="SensorDataWriter">
            <reliability>
                <kind>BEST_EFFORT_RELIABILITY_QOS</kind>
            </reliability>
        </datawriter_qos>

    </qos_library>

    <!-- ****************************************************************** -->
    <!-- Configuration file for RTI Routing Service showing usage of TCP    -->
    <!-- ****************************************************************** -->

    <routing_service name="Router1">

        <annotation>
            <documentation>
                Routes Alarm and Temperature topics from one domain to second domain
    and the other way around over UDP and TCP.

    Configurations in this file with this Routing Service configuration marked 
    as *RS1*:

    UDP LAN ==[domain 6]== *RS1* ==[TCP + domain 0]== RS2 ==[domain 5]== UDP LAN

    UDP side:  Sending to/receiving from everybody in domain 6
    TCP side:  Sending to/receiving from Routing Service #2 in
        domain 0, on WAN machine with public IP/port 18.181.0.31:8500.
        Assuming public port 8500 bound to this application's local
        port 9401.

    !!Please change IP addresses and ports to match your network settings. !!
    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

            </documentation>
        </annotation>

        <!--  This Routing Service can receive administration commands on  
              domain 3.  This means that the Routing Service Shell or Admin  
              Console tools can send commands to update the configuration of
              this Routing Service. -->
        <administration>
            <domain_id>3</domain_id>
        </administration>

        <domain_route name="DataDomain">


            <!-- This routes from a local area network on domain 6 to a TCP -->
            <!-- network on domain 0 -->
            <participant_1>
                <domain_id>6</domain_id>
            </participant_1>

            <participant_2>
                <domain_id>0</domain_id>
                <participant_qos>
                    <!-- Turning off the shared memory and UDPv4/UDPv6 -->
                    <!-- transports -->
                    <transport_builtin>
                        <mask>MASK_NONE</mask>
                    </transport_builtin>
                    <discovery>
                        <initial_peers>
                            <!--                                            -->
                            <!-- CHANGE THIS TO THE MACHINE YOU WANT TO     -->
                            <!-- CONTACT                                    -->
                            <!-- NOTE: Both the IP address and port MUST    -->
                            <!-- MATCH the public address used by the other -->
                            <!-- configuration                              -->
                            <!--                                            -->
                            <element>tcpv4_wan://18.181.0.32:8500</element>
                        </initial_peers>
                    </discovery>
                    <!-- These are the settings to enable TCP for your      -->
                    <!-- network -->
                    <property>
                        <value>
                            <element>
                                <name>dds.transport.load_plugins</name>
                                <value>dds.transport.TCPv4.tcp1</value>
                            </element>
                            <element>
                                <name>dds.transport.TCPv4.tcp1.library</name>
                                <value>nddstransporttcp</value>
                            </element>
                            <element>
                                <name>dds.transport.TCPv4.tcp1.create_function</name>
                                <value>NDDS_Transport_TCPv4_create</value>
                            </element>
                            <element>
                                <name>dds.transport.TCPv4.tcp1.parent.classid</name>
                                <value>NDDS_TRANSPORT_CLASSID_TCPV4_WAN</value>
                            </element>
                            <!-- CHANGE THIS TO THE PUBLIC ADDRESS OF YOUR  -->
                            <!-- LOCAL MACHINE.  YOU WILL HAVE TO FORWARD A -->
                            <!-- PORT THROUGH YOUR FIREWALL/ROUTER TO MAP   -->
                            <!-- FROM THIS PUBLIC PORT TO LOCAL PORT 9401   -->
                            <element>
                                <name>dds.transport.TCPv4.tcp1.public_address</name>
                                <value>18.181.0.31:8500</value>
                            </element>
                            <!-- Change this to the local port you          --> 
                            <!-- configure in your router/firewall          -->
                            <element>
                                <name>dds.transport.TCPv4.tcp1.server_bind_port</name>
                                <value>9401</value>
                            </element>
                        </value>
                    </property>
                </participant_qos>
            </participant_2>

            <session name="SessionForward">
                <topic_route name="AlarmForward">
                    <route_types>true</route_types> 
                    <publish_with_original_info>true</publish_with_original_info>
                    <publish_with_original_timestamp>true</publish_with_original_timestamp>

                    <!-- The DomainParticipant in domain 6 that uses UDP -->
                    <input participant="1">
                        <topic_name>Alarm</topic_name>
                        <registered_type_name>AlarmType</registered_type_name>
                        <creation_mode>IMMEDIATE</creation_mode>

                        <!-- The Alarm topic is:  -->
                        <!--   1) Reliable        -->
                        <!--   2) Durable         -->
                        <!--   3) History of 1    -->
                        <datareader_qos base_name="RoutingLibrary::StateDataReader">
                        </datareader_qos>
                    </input>

                    <!-- The DomainParticipant that uses TCP in domain 0 -->
                    <output>
                        <topic_name>Alarm</topic_name>
                        <registered_type_name>AlarmType</registered_type_name>
                        <creation_mode>IMMEDIATE</creation_mode>

                        <!-- The Alarm topic is:  -->
                        <!--   1) Reliable        -->
                        <!--   2) Durable         -->
                        <!--   3) History of 1    -->
                        <datawriter_qos base_name="RoutingLibrary::StateDataWriter">    
                        </datawriter_qos>

                    </output>
                </topic_route>
                
                <topic_route name="TemperatureForward">
                    <route_types>true</route_types>
                    <publish_with_original_info>true</publish_with_original_info>
                    <publish_with_original_timestamp>true</publish_with_original_timestamp>

                    <!-- The DomainParticipant in domain 6 that uses UDP -->
                    <input participant="1">
                        <topic_name>Temperature</topic_name>
                        <registered_type_name>TemperatureType</registered_type_name>
                        <creation_mode>IMMEDIATE</creation_mode>

                        <!-- Only pass the data through if the temperature is high or low -->
                        <content_filter>
                            <expression>value &gt; %0 OR value &lt; %1 </expression>
                            <parameter>100</parameter>
                            <parameter>32</parameter>
                        </content_filter>

                        <!-- The Temperature topic is:  -->
                        <!-- 1) Best effort -->
                        <datareader_qos base_name="RoutingLibrary::SensorDataReader">
                        </datareader_qos>

                    </input>

                    <!-- The DomainParticipant that uses TCP in domain 0 -->
                    <output>
                        <topic_name>Temperature</topic_name>
                        <registered_type_name>TemperatureType</registered_type_name>
                        <creation_mode>IMMEDIATE</creation_mode>

                        <!-- The Temperature topic is:  -->
                        <!-- 1) Best effort             -->
                        <datawriter_qos base_name="RoutingLibrary::SensorDataWriter">
                        </datawriter_qos>
                    </output>

                </topic_route>
            </session>
            <session name="SessionBackward">
                <topic_route name="AlarmBackward">
                    <route_types>true</route_types>
                    <publish_with_original_info>true</publish_with_original_info>
                    <publish_with_original_timestamp>true</publish_with_original_timestamp>

                    <!-- The DomainParticipant that uses TCP in domain 0 -->
                    <input participant="2">
                        <topic_name>Alarm</topic_name>
                        <registered_type_name>AlarmType</registered_type_name>
                        <creation_mode>IMMEDIATE</creation_mode>

                        <!-- The Alarm topic is:  -->
                        <!--   1) Reliable        -->
                        <!--   2) Durable         -->
                        <!--   3) History of 1    -->
                        <datareader_qos base_name="RoutingLibrary::StateDataReader">
                        </datareader_qos>

                    </input>
                    <!-- The DomainParticipant in domain 6 that uses UDP -->
                    <output>
                        <topic_name>Alarm</topic_name>
                        <registered_type_name>AlarmType</registered_type_name>
                        <creation_mode>IMMEDIATE</creation_mode>

                        <!-- The Alarm topic is:  -->
                        <!--   1) Reliable        -->
                        <!--   2) Durable         -->
                        <!--   3) History of 1    -->
                        <datawriter_qos base_name="RoutingLibrary::StateDataWriter">
                        </datawriter_qos>

                    </output>
                </topic_route>
                <topic_route name="TemperatureBackward">
                    <route_types>true</route_types>
                    <publish_with_original_info>true</publish_with_original_info>
                    <publish_with_original_timestamp>true</publish_with_original_timestamp>

                    <!-- The DomainParticipant that uses TCP in domain 0 -->
                    <input participant="2">
                        <topic_name>Temperature</topic_name>
                        <registered_type_name>TemperatureType</registered_type_name>
                        <creation_mode>IMMEDIATE</creation_mode>

                        <!-- The Temperature topic is:  -->
                        <!-- 1) Best effort -->
                        <datareader_qos base_name="RoutingLibrary::SensorDataReader">
                        </datareader_qos>

                    </input>
                    <!-- The DomainParticipant in domain 6 that uses UDP -->
                    <output>
                        <topic_name>Temperature</topic_name>
                        <registered_type_name>TemperatureType</registered_type_name>
                        <creation_mode>IMMEDIATE</creation_mode>

                        <!-- The Temperature topic is:  -->
                        <!-- 1) Best effort -->
                        <datawriter_qos base_name="RoutingLibrary::SensorDataWriter">
                        </datawriter_qos>

                    </output>

                </topic_route>
            </session>


        </domain_route>

    </routing_service>

    <routing_service name="Router2">

        <annotation>
            <documentation>
                Routes Alarm and Temperature topics from one domain to second domain 
    and the other way around over UDP and TCP.

    Configurations in this file, with this Routing Service configuration marked
    as *RS2*:

    UDP LAN ==[domain 6]== RS1 ==[TCP + domain 0]== *RS2* ==[domain 5]== UDP LAN

    UDP side:  Sending to/receiving from everybody in domain 5
    TCP side:  Sending to/receiving from Routing Service #1 in
    domain 0, on WAN machine with public IP/port 18.181.0.32:8500.
    Assuming public port 8500 bound to this application's local
    port 9400.

    !!Please change IP addresses and ports to match your network settings. !!
    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
            </documentation>
        </annotation>
        
        <!--  This Routing Service can receive administration commands on  
              domain 3.  This means that the Routing Service Shell or Admin  
              Console tools can send commands to update the configuration of
              this Routing Service. -->
        <administration>
            <domain_id>3</domain_id>
        </administration>

        <domain_route name="DataDomain">
            <!-- This routes from a local area network on domain 5 to a -->
            <!-- TCP network on domain 0 -->
            <participant_1>
                <domain_id>5</domain_id>
            </participant_1>

            <participant_2>
                <domain_id>0</domain_id>
                <participant_qos>

                    <!-- Turning off the shared memory and UDPv4/UDPv6 transports -->
                    <transport_builtin>
                        <mask>MASK_NONE</mask>
                    </transport_builtin>

                    <discovery>

                        <initial_peers>
                            <!--                                                -->
                            <!-- CHANGE THIS TO THE MACHINE YOU WANT TO CONTACT -->
                            <!-- NOTE: Both the IP address and port MUST MATCH  -->
                            <!-- the public address used by the other           -->
                            <!-- configuration                                  -->
                            <!--                                                -->
                            <element>tcpv4_wan://18.181.0.32:8500</element>
                        </initial_peers>
                    </discovery>
                    <property>
                        <value>
                            <element>
                                <name>dds.transport.load_plugins</name>
                                <value>dds.transport.TCPv4.tcp1</value>
                            </element>
                            <element>
                                <name>dds.transport.TCPv4.tcp1.library</name>
                                <value>nddstransporttcp</value>
                            </element>
                            <element>
                                <name>dds.transport.TCPv4.tcp1.create_function</name>
                                <value>NDDS_Transport_TCPv4_create</value>
                            </element>
                            <element>
                                <name>dds.transport.TCPv4.tcp1.parent.classid</name>
                                <value>NDDS_TRANSPORT_CLASSID_TCPV4_WAN</value>
                            </element>
                            <!-- CHANGE THIS TO THE PUBLIC ADDRESS OF YOUR  -->
                            <!-- LOCAL MACHINE.  YOU WILL HAVE TO FORWARD A -->
                            <!-- PORT THROUGH YOUR FIREWALL/ROUTER TO MAP   -->
                            <!-- FROM THIS PUBLIC PORT TO LOCAL PORT 9400   -->
                            <element>
                                <name>dds.transport.TCPv4.tcp1.public_address</name>
                                <value>18.181.0.31:8500</value>
                            </element>
                            <!-- Change this to the local port you          -->
                            <!-- configure in your router/firewall          -->
                            <element>
                                <name>dds.transport.TCPv4.tcp1.server_bind_port</name>
                                <value>9400</value>
                            </element>
                        </value>
                    </property>
                </participant_qos>
            </participant_2>

            <session name="SessionForward">
                <topic_route name="AlarmForward">
                    <route_types>true</route_types>
                    <publish_with_original_info>true</publish_with_original_info>
                    <publish_with_original_timestamp>true</publish_with_original_timestamp>
                    <input participant="1">
                        <topic_name>Alarm</topic_name>
                        <registered_type_name>AlarmType</registered_type_name>
                        <creation_mode>IMMEDIATE</creation_mode>

                        <!-- The Alarm topic is:  -->
                        <!--   1) Reliable        -->
                        <!--   2) Durable         -->
                        <!--   3) History of 1    -->
                        <datareader_qos base_name="RoutingLibrary::StateDataReader">
                        </datareader_qos>
                    </input>
                    <output>
                        <topic_name>Alarm</topic_name>
                        <registered_type_name>AlarmType</registered_type_name>
                        <creation_mode>IMMEDIATE</creation_mode>
                        <!-- The Alarm topic is:  -->
                        <!--   1) Reliable        -->
                        <!--   2) Durable         -->
                        <!--   3) History of 1    -->
                        <datawriter_qos base_name="RoutingLibrary::StateDataWriter">
                        </datawriter_qos>

                    </output>
                </topic_route>
                <topic_route name="TemperatureForward">
                    <route_types>true</route_types>
                    <publish_with_original_info>true</publish_with_original_info>
                    <publish_with_original_timestamp>true</publish_with_original_timestamp>
                    <input participant="1">
                        <topic_name>Temperature</topic_name>
                        <registered_type_name>TemperatureType</registered_type_name>
                        <creation_mode>IMMEDIATE</creation_mode>
                        
                        <!-- Only pass the data through if the temperature is high or low -->
                        <content_filter>
                            <expression>value &gt; %0 OR value &lt; %1 </expression>
                            <parameter>100</parameter>
                            <parameter>32</parameter>
                        </content_filter>

                        <!-- The Temperature topic is:  -->
                        <!--   1) Best effort           -->
                        <datareader_qos base_name="RoutingLibrary::SensorDataReader">
                        </datareader_qos>
                    </input>
                    <output>
                        <topic_name>Temperature</topic_name>
                        <registered_type_name>TemperatureType</registered_type_name>
                        <creation_mode>IMMEDIATE</creation_mode>
                        <!-- The Temperature topic is:  -->
                        <!--   1) Best effort           -->
                        <datawriter_qos base_name="RoutingLibrary::SensorDataWriter">
                        </datawriter_qos>

                    </output>
                </topic_route>
            </session>
            <session name="SessionBackward">
                <topic_route name="AlarmBackward">
                    <route_types>true</route_types>
                    <publish_with_original_info>true</publish_with_original_info>
                    <publish_with_original_timestamp>true</publish_with_original_timestamp>
                    <input participant="2">
                        <topic_name>Alarm</topic_name>
                        <registered_type_name>AlarmType</registered_type_name>
                        <creation_mode>IMMEDIATE</creation_mode>
                        <!-- The Alarm topic is:  -->
                        <!--   1) Reliable        -->
                        <!--   2) Durable         -->
                        <!--   3) History of 1    -->
                        <datareader_qos base_name="RoutingLibrary::StateDataReader">
                        </datareader_qos>
                    </input>

                    <output>
                        <topic_name>Alarm</topic_name>
                        <registered_type_name>AlarmType</registered_type_name>
                        <creation_mode>IMMEDIATE</creation_mode>

                        <!-- The Alarm topic is:  -->
                        <!--   1) Reliable        -->
                        <!--   2) Durable         -->
                        <!--   3) History of 1    -->
                        <datawriter_qos base_name="RoutingLibrary::StateDataWriter">
                        </datawriter_qos>
                    </output>
                </topic_route>
                <topic_route name="TemperatureBackward">
                    <route_types>true</route_types>
                    <publish_with_original_info>true</publish_with_original_info>
                    <publish_with_original_timestamp>true</publish_with_original_timestamp>
                    <input participant="2">
                        <topic_name>Temperature</topic_name>
                        <registered_type_name>TemperatureType</registered_type_name>
                        <creation_mode>IMMEDIATE</creation_mode>
                        
                        <!-- The Temperature topic is:  -->
                        <!--   1) Best effort           -->
                        <datareader_qos base_name="RoutingLibrary::SensorDataReader">
                        </datareader_qos>
                    </input>
                    <output>
                        <topic_name>Temperature</topic_name>
                        <registered_type_name>TemperatureType</registered_type_name>
                        <creation_mode>IMMEDIATE</creation_mode>
                        <!-- The Temperature topic is:  -->
                        <!--   1) Best effort           -->
                        <datawriter_qos base_name="RoutingLibrary::SensorDataWriter">
                        </datawriter_qos>

                    </output>
                </topic_route>
            </session>

        </domain_route>

    </routing_service>
</dds>
